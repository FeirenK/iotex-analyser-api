syntax = "proto3";

package api;
import "google/api/annotations.proto";
import "include/graphql.proto";
option go_package = "./api";

message ActionsRequest {
  string address = 1;
  uint64 height = 2;
  uint64 offset = 3;
  uint64 size = 4;
  string sort = 5;
}
message ActionsByAddressResult {
  string actHash = 1;
  string blkHash = 2;
  uint64 timeStamp = 3;
  string actType = 4;
  string sender = 5;
  string recipient = 6;
  string amount = 7;
  string gasFee = 8;
}
message ActionsByAddressResponse {
  uint64 count = 1;
  repeated ActionsByAddressResult results = 2;
}
message Xrc20ByAddressResult {
  string actHash = 1;
  uint64 blkHeight = 2;
  string from = 3;
  string to = 4;
  string contractAddress = 5;
  string amount = 6;
  uint64 timeStamp = 7;
}
message Xrc20ByAddressResponse {
  uint64 count = 1;
  repeated Xrc20ByAddressResult results = 2;
}
message EvmTransferDetailResult {
  string actHash = 1;
  uint64 blkHeight = 2;
  string sender = 3;
  string recipient = 4;
  string blkHash = 5;
  string amount = 6;
  uint64 timeStamp = 7;
}
message EvmTransferDetailListByAddressResponse {
  uint64 count = 1;
  repeated EvmTransferDetailResult results = 2;
}
message AllActionsByAddressResult {
  string actHash = 1;
  uint64 blkHeight = 2;
  string sender = 3;
  string recipient = 4;
  string actType = 5;
  string amount = 6;
  uint64 timeStamp = 7;
  enum RecordType {
		NATIVE = 0;
		XRC20 = 1;
    XRC721 = 2;
    EVMTRANSFER = 3;
	}
  RecordType recordType = 8;
}
message AllActionsByAddressResponse {
  uint64 count = 1;
  repeated AllActionsByAddressResult results = 2;
}
service ActionsService {
  rpc GetActionsByAddress(ActionsRequest) returns (ActionsByAddressResponse) {
    option (graphql.schema) = {
      type: QUERY   // declare as Query
      name: "GetActionsByAddress" // query name
    };
    option (google.api.http) = {
      post: "/api.ActionsService.GetActionsByAddress"
      body: "*"
    };
  };
  rpc GetXrc20ByAddress(ActionsRequest) returns (Xrc20ByAddressResponse) {
    option (graphql.schema) = {
      type: QUERY 
      name: "GetXrc20ByAddress" 
    };
    option (google.api.http) = {
      post: "/api.ActionsService.GetXrc20ByAddress"
      body: "*"
    };
  };
  rpc GetXrc721ByAddress(ActionsRequest) returns (Xrc20ByAddressResponse) {
    option (graphql.schema) = {
      type: QUERY 
      name: "GetXrc721ByAddress" 
    };
    option (google.api.http) = {
      post: "/api.ActionsService.GetXrc721ByAddress"
      body: "*"
    };
  };
  rpc GetEvmTransferDetailListByAddress(ActionsRequest) returns (EvmTransferDetailListByAddressResponse) {
    option (graphql.schema) = {
      type: QUERY 
      name: "GetEvmTransferDetailListByAddress" 
    };
    option (google.api.http) = {
      post: "/api.ActionsService.GetEvmTransferDetailListByAddress"
      body: "*"
    };
  };
  rpc GetAllActionsByAddress(ActionsRequest) returns (AllActionsByAddressResponse) {
    option (graphql.schema) = {
      type: QUERY 
      name: "GetAllActionsByAddress" 
    };
    option (google.api.http) = {
      post: "/api.ActionsService.GetAllActionsByAddress"
      body: "*"
    };
  };
}